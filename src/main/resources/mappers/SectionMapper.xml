<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.d4smart.my12306.dao.SectionMapper" >
  <resultMap id="BaseResultMap" type="com.d4smart.my12306.pojo.Section" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="from_station" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="to_station" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="mileage" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="price" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, from_station, to_station, mileage, price, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from section
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from section
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.d4smart.my12306.pojo.Section" >
    insert into section (id, from_station, to_station,
      mileage, price, create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{fromStation,jdbcType=VARCHAR}, #{toStation,jdbcType=VARCHAR},
      #{mileage,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.d4smart.my12306.pojo.Section" >
    insert into section
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fromStation != null" >
        from_station,
      </if>
      <if test="toStation != null" >
        to_station,
      </if>
      <if test="mileage != null" >
        mileage,
      </if>
      <if test="price != null" >
        price,
      </if>
      create_time, update_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fromStation != null" >
        #{fromStation,jdbcType=VARCHAR},
      </if>
      <if test="toStation != null" >
        #{toStation,jdbcType=VARCHAR},
      </if>
      <if test="mileage != null" >
        #{mileage,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      now(), now()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.d4smart.my12306.pojo.Section" >
    update section
    <set >
      <if test="fromStation != null" >
        from_station = #{fromStation,jdbcType=VARCHAR},
      </if>
      <if test="toStation != null" >
        to_station = #{toStation,jdbcType=VARCHAR},
      </if>
      <if test="mileage != null" >
        mileage = #{mileage,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      update_time = now()
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.d4smart.my12306.pojo.Section" >
    update section
    set from_station = #{fromStation,jdbcType=VARCHAR},
      to_station = #{toStation,jdbcType=VARCHAR},
      mileage = #{mileage,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getSectionsByPage" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from section
    <where>
      <if test="fromStation != null">
        and from_station = #{fromStation}
      </if>
      <if test="toStation != null">
        and to_station = #{toStation}
      </if>
    </where>
    order by id desc
    limit #{offset}, #{limit}
  </select>

  <select id="getSectionCount" parameterType="map" resultType="int">
    select count(1)
    from section
    <where>
      <if test="fromStation != null">
        and from_station = #{fromStation}
      </if>
      <if test="toStation != null">
        and to_station = #{toStation}
      </if>
    </where>
  </select>

  <select id="selectSectionsByIds" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from section
    where id in (${sectionIds})
    order by field(id,${sectionIds})
  </select>
</mapper>