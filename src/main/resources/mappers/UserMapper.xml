<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.d4smart.my12306.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.d4smart.my12306.pojo.User" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="identity_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="actual_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sex" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="last_login" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, phone, identity_number, email, password, actual_name, sex, role, last_login,
    status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.d4smart.my12306.pojo.User" >
    insert into user (id, phone, identity_number, 
      email, password, actual_name, 
      sex, role, last_login,
      status, create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{identityNumber,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{actualName,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{role,jdbcType=INTEGER}, #{lastLogin,jdbcType=TIMESTAMP},
      #{status,jdbcType=INTEGER}, now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.d4smart.my12306.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="identityNumber != null" >
        identity_number,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="actualName != null" >
        actual_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="lastLogin != null" >
        last_login,
      </if>
      <if test="status != null" >
        status,
      </if>
      create_time, update_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="identityNumber != null" >
        #{identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="actualName != null" >
        #{actualName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="lastLogin != null" >
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      now(), now()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.d4smart.my12306.pojo.User" >
    update user
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="identityNumber != null" >
        identity_number = #{identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="actualName != null" >
        actual_name = #{actualName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="lastLogin != null" >
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      update_time = now()
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.d4smart.my12306.pojo.User" >
    update user
    set phone = #{phone,jdbcType=VARCHAR},
      identity_number = #{identityNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      actual_name = #{actualName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      role = #{role,jdbcType=INTEGER},
      last_login = #{lastLogin,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="checkPhone" parameterType="string" resultType="int">
    select count(1)
    from user
    where phone = #{phone}
  </select>

  <select id="checkEmail" parameterType="string" resultType="int">
    select count(1)
    from user
    where email = #{email}
  </select>

  <select id="checkIdentityNumber" parameterType="string" resultType="int">
    select count(1)
    from user
    where identity_number = #{identity_number}
  </select>

  <select id="selectLoginByPhone" parameterType="map" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from user
    where phone = #{phone}
    and password = #{password}
  </select>

  <select id="selectLoginByEmail" parameterType="map" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from user
    where email = #{email}
    and password = #{password}
  </select>

  <select id="selectLoginByIdentityNumber" parameterType="map" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from user
    where identity_number = #{identity_number}
    and password = #{password}
  </select>

  <update id="updateLastLoginTime" parameterType="map">
    update user
    set last_login = now()
    where id = #{id}
  </update>

  <select id="checkPassword" parameterType="map" resultType="int">
    select count(1)
    from user
    where id = #{id}
    and password = #{password}
  </select>
</mapper>